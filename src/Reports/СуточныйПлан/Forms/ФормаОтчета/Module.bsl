
&НаКлиенте
Процедура Печать(Команда)
	
	Док = ПечатьСервер(Количество);
	Док.Показать();
	
КонецПроцедуры

&НаСервере
Функция ПечатьСервер(КоличествоЭкз)
		
	Схема = Отчеты.СуточныйПлан.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	 Если КлючТекущегоВарианта = "Завтра" тогда
	 	Настройки = Схема.ВариантыНастроек.Завтра.Настройки;	
	 ИначеЕсли КлючТекущегоВарианта = "Сегодня" тогда
 	 	Настройки = Схема.ВариантыНастроек.Сегодня.Настройки;
     КонецЕсли;
	 КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	 КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);

	 Настройки = КомпоновщикНастроек.Настройки;

	 КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	 МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки);
	 ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	 ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	 ДокументРезультат = Новый ТабличныйДокумент;
	 ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	 ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	 ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	 ДокументРезультат.ОтображатьЗаголовки = Ложь;
	 ДокументРезультат.ОтображатьСетку = Ложь;
	 ДокументРезультат.АвтоМасштаб = Истина;
	 
	 Высота1Табл = ДокументРезультат.ВысотаТаблицы;
	 ОстатокСтраницы = 59;
	 
	ТабДок = новый ТабличныйДокумент;
	Для Экз = 1 по КоличествоЭкз Цикл 
		Если ОстатокСтраницы < Высота1Табл Тогда 
			//новая страница
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ОстатокСтраницы = 59;
		КонецЕсли;	
		ТабДок.Вывести(ДокументРезультат);
		ПустойМакет = Отчеты.СуточныйПлан.ПолучитьМакет("ДляПустойСтроки");
		ПустаяОбласть = ПустойМакет.ПолучитьОбласть("ПустаяОбласть");
		ТабДок.Вывести(ПустаяОбласть);

		ОстатокСтраницы = ОстатокСтраницы - Высота1Табл;
	КонецЦикла;
		
	Возврат ТабДок;
	
КонецФункции	

&НаСервере
Процедура ОтправитьНаПочтуДиректоруНаСервере()
	
	Если Отчет.Отправлено = "Отчет успешно доставлен!" или Отчет.Отправлено = "Отчет отправлен ранее" Тогда 
		Сообщить("Сообщение было отправлено ранее!");
	Иначе 
		
		ИмяТемпФайла = "/home/usr1cv8/mail/message.pdf"; 
		//получаем идентификатор параметра 
		ИдНастройки =
		Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту
		(Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра
		(Новый ПараметрКомпоновкиДанных("Дата")));
		
		//получаем параметр по идентификатору
		ПараметрСКДДата =
		Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдНастройки).Значение.Дата;
		//ИмяТемпФайла = "G:\message.pdf";
		
		Результат.Записать(ИмяТемпФайла, ТипФайлаТабличногоДокумента.PDF);
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПолучателиОтчетовПоПочте.АдресПолучателя КАК АдресПолучателя
			|ИЗ
			|	Справочник.ПолучателиОтчетовПоПочте КАК ПолучателиОтчетовПоПочте
			|ГДЕ
			|	ПолучателиОтчетовПоПочте.ПолучательСуточныйПлан = ИСТИНА
			|	И ПолучателиОтчетовПоПочте.ПометкаУдаления = ЛОЖЬ";  			
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Ответ = Вспомогательные.ОтправитьСообщение(
		    ВыборкаДетальныеЗаписи.АдресПолучателя, "Суточный план за "+ПараметрСКДДата, "", ИмяТемпФайла,
		    Константы.АдресОтправителя.Получить(), Константы.СерверSMTP.Получить() , Константы.ПортSMTP.Получить(),
			Константы.ПользовательSMTP.Получить(), Константы.ПарольSMTP.Получить());
			
			Если Ответ Тогда 
				
				Сообщить("Сообщение успешно отправлено получателю "+ВыборкаДетальныеЗаписи.АдресПолучателя);
				Элементы.Отправлено.ЦветРамки = Новый Цвет(0, 128, 0);
				Отчет.Отправлено = "Отчет успешно доставлен!";
				МенеджерЗаписи = РегистрыСведений.ОтправкаНаПочту.СоздатьМенеджерЗаписи(); 
				МенеджерЗаписи.Период = ТекущаяДата(); 
				МенеджерЗаписи.ТипОтправляемогоДокумента = Перечисления.ТипОтправляемогоДокумента.СуточныйПлан;
				МенеджерЗаписи.НомерДокумента = ДеньГода(ПараметрСКДДата);
				МенеджерЗаписи.Записать();	 
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаПочтуДиректору(Команда)
	ОтправитьНаПочтуДиректоруНаСервере();
КонецПроцедуры  

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	//получаем идентификатор параметра 
	ИдНастройки =
	Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту
	(Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра
	(Новый ПараметрКомпоновкиДанных("Дата")));
	
	//получаем параметр по идентификатору
	ПараметрСКДДата =
	Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдНастройки).Значение.Дата;
	
	//устанавливаем значение реквизита равным стартовому значению параметра
	Отчет.ДатаДокумента = ПараметрСКДДата;
	
	//ПараметрСКД.Использование = Истина;
	
	//проверяем статус отправки
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтправкаНаПочту.Период КАК Период
		|ИЗ
		|	РегистрСведений.ОтправкаНаПочту КАК ОтправкаНаПочту
		|ГДЕ
		|	ОтправкаНаПочту.ТипОтправляемогоДокумента = &ТипОтправляемогоДокумента
		|	И ОтправкаНаПочту.НомерДокумента = &НомерДокумента";
	
	Запрос.УстановитьПараметр("НомерДокумента", Строка(ДеньГода(ПараметрСКДДата)));
	Запрос.УстановитьПараметр("ТипОтправляемогоДокумента", Перечисления.ТипОтправляемогоДокумента.СуточныйПлан);
		
	Если Запрос.Выполнить().Пустой() Тогда
		Элементы.Отправлено.ЦветРамки = Новый Цвет(128, 128, 0);
		Отчет.Отправлено = "Отчет еще не отправлялся";		
	Иначе 
		Элементы.Отправлено.ЦветРамки = Новый Цвет(0, 128, 0);
		Выборка = Запрос.Выполнить().Выбрать();
		Периоды = "";
		Пока Выборка.Следующий()Цикл
			Периоды = Периоды + Выборка.Период + " ";									
		КонецЦикла;
		Отчет.Отправлено = "Отчет отправлен ранее: " + Периоды;
	КонецЕсли;                        		
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("Вариант", КлючТекущегоВарианта);
КонецПроцедуры

