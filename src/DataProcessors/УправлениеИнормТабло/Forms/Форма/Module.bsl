&НаКлиенте
Процедура СуточныйПланВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ЕстьЗапись = Ложь;
	Для каждого Стр Из СуточныйПлан2 цикл
		Если Стр.рейс = Элемент.ТекущиеДанные.РейсНаименованиеДляИнформТабло Тогда 
			ЕстьЗапись = Истина;
		КонецЕсли;	
	КонецЦикла;
	Если не ЕстьЗапись Тогда
		Стр = СуточныйПлан2.Добавить();
		Стр.Дата = Элемент.ТекущиеДанные.Дата;
		Стр.Вылет = Элемент.ТекущиеДанные.Ссылка;
		Стр.Рейс = Элемент.ТекущиеДанные.РейсНаименованиеДляИнформТабло;
		Стр.ОтправлениеПлан	= Элемент.ТекущиеДанные.ОтправлениеПлан;
		Стр.НачалоРегистрации = Стр.ОтправлениеПлан - 2*60*60;
		Стр.ОкончаниеРегистрации = Стр.ОтправлениеПлан - 40*60;
		Стр.НачалоПосадки = Стр.ОтправлениеПлан - 40*60;
		Стр.ОкончаниеПосадки = Стр.ОтправлениеПлан - 10*60;
		Стр.Ст1 = Истина;
		Стр.Ст2 = Истина;
		Стр.Ст3 = Истина;
		Стр.Вых = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВРаботу(Команда)
	//Проверка
	Ошибки = Ложь;
	номер = 0;
	//проверки на заполнение галочек, и на правильный порядок временных отрезков
	Для Каждого Стр Из СуточныйПлан2 Цикл
		номер = номер + 1;
		Если (не Стр.Ст1) и (не Стр.Ст2) и (не Стр.Ст3) и (не Стр.Вых) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + номер + "не выбрано ни одного табло";
			Сообщение.Сообщить();
			Ошибки = Истина;				
		КонецЕсли;
		
		Если Стр.НачалоРегистрации >= стр.ОкончаниеРегистрации Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + номер + "начало регистрации должно быть ранее окончания регистрации";
			Сообщение.Сообщить();
			Ошибки = Истина;				
		КонецЕсли;
		
		Если Стр.ОкончаниеРегистрации >= стр.ОкончаниеПосадки Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + номер + "окончание регистрации должно быть ранее окончания посадки";
			Сообщение.Сообщить();
			Ошибки = Истина;				
		КонецЕсли;
		
		Если Стр.НачалоПосадки >= стр.ОкончаниеПосадки Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + номер + "начало посадки должно быть ранее окончания посадки";
			Сообщение.Сообщить();
			Ошибки = Истина;				
		КонецЕсли;
		
		Если Стр.НачалоРегистрации >= стр.НачалоПосадки Тогда 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + номер + "окончание посадки должно быть ранее отправления";
			Сообщение.Сообщить();
			Ошибки = Истина;				
		КонецЕсли;   	
		
	КонецЦикла;
	//проверка на накладки временных интервалов
	Для инд=0 По СуточныйПлан2.Количество()-2 Цикл
		Для инд2=инд+1 по СуточныйПлан2.Количество()-1 Цикл 
			Если СуточныйПлан2[инд].Ст1 и СуточныйПлан2[инд2].Ст1 и 
				не(СуточныйПлан2[инд].НачалоРегистрации>=СуточныйПлан2[инд2].ОкончаниеРегистрации или СуточныйПлан2[инд2].НачалоРегистрации>=СуточныйПлан2[инд].ОкончаниеРегистрации)Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Имеется наложение интервалов в табло №1 для строк " + Строка(инд+1) + " и " + Строка(инд2+1);
					Сообщение.Сообщить();
					Ошибки = Истина;				
			КонецЕсли;
				
			Если СуточныйПлан2[инд].Ст2 и СуточныйПлан2[инд2].Ст2 и 
				не(СуточныйПлан2[инд].НачалоРегистрации>=СуточныйПлан2[инд2].ОкончаниеРегистрации или СуточныйПлан2[инд2].НачалоРегистрации>=СуточныйПлан2[инд].ОкончаниеРегистрации)Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Имеется наложение интервалов в табло №2 для строк " + Строка(инд+1) + " и " + Строка(инд2+1);
					Сообщение.Сообщить();
					Ошибки = Истина;				
			КонецЕсли;
				
			Если СуточныйПлан2[инд].Ст3 и СуточныйПлан2[инд2].Ст3 и 
				не(СуточныйПлан2[инд].НачалоРегистрации>=СуточныйПлан2[инд2].ОкончаниеРегистрации или СуточныйПлан2[инд2].НачалоРегистрации>=СуточныйПлан2[инд].ОкончаниеРегистрации)Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Имеется наложение интервалов в табло №3 для строк " + Строка(инд+1) + " и " + Строка(инд2+1);
					Сообщение.Сообщить();
					Ошибки = Истина;				
			КонецЕсли;
		
		    Если СуточныйПлан2[инд].Вых и СуточныйПлан2[инд2].Вых и 
				не(СуточныйПлан2[инд].НачалоПосадки>=СуточныйПлан2[инд2].ОкончаниеПосадки или СуточныйПлан2[инд2].НачалоПосадки>=СуточныйПлан2[инд].ОкончаниеПосадки)Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Имеется наложение интервалов в табло №4 для строк " + Строка(инд+1) + " и " + Строка(инд2+1);
					Сообщение.Сообщить();
					Ошибки = Истина;				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//конец проверки
	Состояние.Очистить();
	
	Если не Ошибки Тогда 
			
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ПутьКФайлу);
		ЗаписьXML.ЗаписатьОбъявлениеXML();    
		ЗаписьXML.ЗаписатьНачалоЭлемента("Strings");
		
	КонецЕсли;	
	
	ГраницаИнтервалаЛ = КонецГода(ТекущаяДата());
	ГраницаИнтервалаП = НачалоГода(ТекущаяДата());
	
	Точка = Состояние.УстановитьТочку("1");    
	Точка = Состояние.УстановитьТочку("2");    
	Точка = Состояние.УстановитьТочку("3");    
	Точка = Состояние.УстановитьТочку("4"); 
	
	Для Каждого Стр Из СуточныйПлан2 Цикл
		
		Если Стр.Ст1 Тогда
			//xml
			Если не Ошибки Тогда 
				ЗаписьXML.ЗаписатьНачалоЭлемента("String");
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_route");
				ЗаписьXML.ЗаписатьТекст(Строка(Стр.Рейс));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("begintime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.НачалоРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("endtime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОкончаниеРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("uptime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОтправлениеПлан));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_st");
				ЗаписьXML.ЗаписатьТекст("1");
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;	
			//дг
			Точка = Состояние.УстановитьТочку("1");    
			Серия = Состояние.УстановитьСерию(Стр.Рейс);
			Значение = Состояние.ПолучитьЗначение(Точка, Серия);
			Интервал = Значение.Добавить();
			Интервал.Начало = Стр.НачалоРегистрации;
			Интервал.Конец = Стр.ОкончаниеРегистрации;
			
			Если Стр.НачалоРегистрации < ГраницаИнтервалаЛ Тогда 
				ГраницаИнтервалаЛ = Стр.НачалоРегистрации;
			КонецЕсли;
			
			Если Стр.ОкончаниеРегистрации > ГраницаИнтервалаП Тогда 
				ГраницаИнтервалаП = Стр.ОкончаниеРегистрации;
			КонецЕсли;	 			
			
		КонецЕсли;
		
		Если Стр.Ст2 Тогда
			//xml
			Если не Ошибки Тогда 
				ЗаписьXML.ЗаписатьНачалоЭлемента("String");
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_route");
				ЗаписьXML.ЗаписатьТекст(Строка(Стр.Рейс));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("begintime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.НачалоРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("endtime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОкончаниеРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("uptime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОтправлениеПлан));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_st");
				ЗаписьXML.ЗаписатьТекст("2");
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;	
			//дг
			Точка = Состояние.УстановитьТочку("2");    
			Серия = Состояние.УстановитьСерию(Стр.Рейс);
			Значение = Состояние.ПолучитьЗначение(Точка, Серия);
			Интервал = Значение.Добавить();
			Интервал.Начало = Стр.НачалоРегистрации;
			Интервал.Конец = Стр.ОкончаниеРегистрации;
			
			Если Стр.НачалоРегистрации < ГраницаИнтервалаЛ Тогда 
				ГраницаИнтервалаЛ = Стр.НачалоРегистрации;
			КонецЕсли;
			
			Если Стр.ОкончаниеРегистрации > ГраницаИнтервалаП Тогда 
				ГраницаИнтервалаП = Стр.ОкончаниеРегистрации;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Стр.Ст3 Тогда
			//xml
			Если не Ошибки Тогда 
				ЗаписьXML.ЗаписатьНачалоЭлемента("String");
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_route");
				ЗаписьXML.ЗаписатьТекст(Строка(Стр.Рейс));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("begintime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.НачалоРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("endtime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОкончаниеРегистрации));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("uptime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОтправлениеПлан));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_st");
				ЗаписьXML.ЗаписатьТекст("3");
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;	
			//дг
			Точка = Состояние.УстановитьТочку("3");    
			Серия = Состояние.УстановитьСерию(Стр.Рейс);
			Значение = Состояние.ПолучитьЗначение(Точка, Серия);
			Интервал = Значение.Добавить();
			Интервал.Начало = Стр.НачалоРегистрации;
			Интервал.Конец = Стр.ОкончаниеРегистрации;
			
			Если Стр.НачалоРегистрации < ГраницаИнтервалаЛ Тогда 
				ГраницаИнтервалаЛ = Стр.НачалоРегистрации;
			КонецЕсли;
			
			Если Стр.ОкончаниеРегистрации > ГраницаИнтервалаП Тогда 
				ГраницаИнтервалаП = Стр.ОкончаниеРегистрации;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Стр.Вых Тогда
			//xml
			Если не Ошибки Тогда 
				ЗаписьXML.ЗаписатьНачалоЭлемента("String");
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_route");
				ЗаписьXML.ЗаписатьТекст(Строка(Стр.Рейс));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("begintime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.НачалоПосадки));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("endtime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОкончаниеПосадки));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("uptime");
				ЗаписьXML.ЗаписатьТекст(ПредставлениеДатаXML(Стр.ОтправлениеПлан));
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьНачалоЭлемента("n_st");
				ЗаписьXML.ЗаписатьТекст("4");
				ЗаписьXML.ЗаписатьКонецЭлемента();
				
				ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЕсли;	
			//дг
			Точка = Состояние.УстановитьТочку("4");    
			Серия = Состояние.УстановитьСерию(Стр.Рейс);
			Значение = Состояние.ПолучитьЗначение(Точка, Серия);
			Интервал = Значение.Добавить();
			Интервал.Начало = Стр.НачалоПосадки;
			Интервал.Конец = Стр.ОкончаниеПосадки;
			
			Если Стр.НачалоПосадки < ГраницаИнтервалаЛ Тогда 
				ГраницаИнтервалаЛ = Стр.НачалоПосадки;
			КонецЕсли;
			
			Если Стр.ОкончаниеПосадки > ГраницаИнтервалаП Тогда 
				ГраницаИнтервалаП = Стр.ОкончаниеПосадки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	//xml   			
	Если не Ошибки Тогда 
		ЗаписьXML.ЗаписатьКонецЭлемента();  
		ЗаписьXML.Закрыть();
	КонецЕсли;	
	//дг
	Состояние.АвтоОпределениеПолногоИнтервала = Ложь;
	Состояние.УстановитьПолныйИнтервал(ГраницаИнтервалаЛ,ГраницаИнтервалаП);
		
	ПоследнееОбновление = ТекущаяДата();
	Если не Ошибки Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные успешно обновлены!";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция	ПредставлениеДатаXML(ВхДата)
	Строка = Формат(ВхДата, "ДФ=гггг")+"-"+Формат(ВхДата, "ДФ=ММ")+"-"+Формат(ВхДата, "ДФ=дд")+" "+Формат(ВхДата, "ДЛФ=В");
	Возврат Строка;	
КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭлементМеток = Состояние.ОбластьПостроения.ШкалаВремени.Элементы.Добавить(); 
	ЭлементМеток.Единица = ТипЕдиницыШкалыВремени.Час;	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	СуточныйПлан2.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПутьКФайлуПриИзменении(Элемент)
	Если Элементы.ПутьКФайлу.Доступность Тогда 
		Элементы.ПутьКФайлу.Доступность = Ложь;
	Иначе 
		Элементы.ПутьКФайлу.Доступность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СуточныйПлан2ОтправлениеПланПриИзменении(Элемент)
	ТекущиеДанныеСП2 = Элементы.СуточныйПлан2.ТекущиеДанные;
	Разница = ТекущиеДанныеСП2.ОтправлениеПлан - БуферОкончания; 
	
	Если Регистрация = "1" Тогда   		
		ТекущиеДанныеСП2.ОкончаниеРегистрации = ТекущиеДанныеСП2.ОкончаниеРегистрации + Разница;
	ИначеЕсли Регистрация = "2" Тогда 
		ТекущиеДанныеСП2.ОкончаниеРегистрации = ТекущиеДанныеСП2.ОкончаниеРегистрации + Разница;
		ТекущиеДанныеСП2.НачалоРегистрации = ТекущиеДанныеСП2.НачалоРегистрации + Разница;
	КонецЕсли;
	
	Если Посадка = "1" Тогда 
		ТекущиеДанныеСП2.ОкончаниеПосадки = ТекущиеДанныеСП2.ОкончаниеПосадки + Разница;
	ИначеЕсли Посадка = "2" Тогда 
		ТекущиеДанныеСП2.ОкончаниеПосадки = ТекущиеДанныеСП2.ОкончаниеПосадки + Разница;
		ТекущиеДанныеСП2.НачалоПосадки = ТекущиеДанныеСП2.НачалоПосадки + Разница;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СуточныйПлан2ПередНачаломИзменения(Элемент, Отказ)
	БуферОкончания = Элементы.СуточныйПлан2.ТекущиеДанные.ОтправлениеПлан;
КонецПроцедуры

